{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\E_comm\\\\Frontend\\\\my-react-app\\\\src\\\\Pages\\\\Product.jsx\",\n  _s = $RefreshSig$();\n// Assuming this is inside a component where you are using the Breadcrum component\nimport React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Breadcrum from \"../Components/Breadcrum/Breadcrum\";\nimport { ShopContext } from \"../Context/ShopContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourComponent() {\n  _s();\n  const {\n    all_product\n  } = useContext(ShopContext);\n  const {\n    productId\n  } = useParams();\n\n  // Find the product based on the productId\n  const product = all_product.find(e => e.id === Number(productId));\n\n  // Check if the product is available\n  if (!product) {\n    // Optionally, you can render a loading state or handle the absence of the product\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Breadcrum, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(YourComponent, \"+KS2qRJ93JbPgoOMNJlO1rOGwrQ=\", false, function () {\n  return [useParams];\n});\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useContext","useParams","Breadcrum","ShopContext","jsxDEV","_jsxDEV","YourComponent","_s","all_product","productId","product","find","e","id","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/E_comm/Frontend/my-react-app/src/Pages/Product.jsx"],"sourcesContent":["// Assuming this is inside a component where you are using the Breadcrum component\r\nimport React, { useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Breadcrum from \"../Components/Breadcrum/Breadcrum\";\r\nimport { ShopContext } from \"../Context/ShopContext\";\r\n\r\nfunction YourComponent() {\r\n  const { all_product } = useContext(ShopContext);\r\n  const { productId } = useParams();\r\n\r\n  // Find the product based on the productId\r\n  const product = all_product.find((e) => e.id === Number(productId));\r\n\r\n  // Check if the product is available\r\n  if (!product) {\r\n    // Optionally, you can render a loading state or handle the absence of the product\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Other content */}\r\n      <Breadcrum product={product} />\r\n      {/* Other content */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YourComponent;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,mCAAmC;AACzD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAY,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EAC/C,MAAM;IAAEM;EAAU,CAAC,GAAGR,SAAS,CAAC,CAAC;;EAEjC;EACA,MAAMS,OAAO,GAAGF,WAAW,CAACG,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKC,MAAM,CAACL,SAAS,CAAC,CAAC;;EAEnE;EACA,IAAI,CAACC,OAAO,EAAE;IACZ;IACA,oBAAOL,OAAA;MAAAU,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,oBACEd,OAAA;IAAAU,QAAA,eAEEV,OAAA,CAACH,SAAS;MAACQ,OAAO,EAAEA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5B,CAAC;AAEV;AAACZ,EAAA,CApBQD,aAAa;EAAA,QAEEL,SAAS;AAAA;AAAAmB,EAAA,GAFxBd,aAAa;AAsBtB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}